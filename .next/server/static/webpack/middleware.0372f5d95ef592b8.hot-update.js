"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _app_lib_platform_redirects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/lib/platform-redirects */ \"(middleware)/./app/lib/platform-redirects.ts\");\n\n\n// SEO and GEO Redirects\nconst CONTENT_REDIRECTS = {\n    // Blog and Content Redirects\n    '/blog/chatgpt-optimization-guide': '/tutorials/chatgpt-optimization',\n    '/blog/seo-vs-geo-complete-guide': '/tutorials/seo-vs-geo',\n    // Case Studies Redirects\n    '/case-studies/b2b-geo': '/use-cases/b2b',\n    '/case-studies/content-geo': '/use-cases/content',\n    '/case-studies/ecommerce-geo': '/use-cases/ecommerce',\n    '/case-studies/saas-geo': '/use-cases/saas',\n    // Entities Redirects\n    '/entities/ai-citations': '/glossary/ai-citations',\n    '/entities/ai-seo': '/glossary/ai-seo',\n    '/entities/authority-signals': '/glossary/authority-signals',\n    '/entities/bing-chat-optimization': '/tutorials/bing-chat-optimization',\n    '/entities/content-structuring': '/tutorials/content-structuring',\n    '/entities/gpt-4-optimization': '/tutorials/gpt-4-optimization',\n    '/entities/openai-plugins': '/glossary/openai-plugins',\n    '/entities/prompt-engineering': '/tutorials/prompt-engineering',\n    '/entities/rag-optimization': '/tutorials/rag-optimization',\n    '/entities/semantic-search-optimization': '/tutorials/semantic-search-optimization',\n    '/entities/statistical-enhancement': '/glossary/statistical-enhancement',\n    '/entities/vector-embeddings': '/glossary/vector-embeddings',\n    // Platforms Redirects\n    '/platforms/gemini': '/platforms/google-gemini',\n    '/platforms/grok': '/platforms/grok-ai'\n};\n// Language configuration\nconst supportedLanguages = [\n    'en'\n] // Only English is currently supported\n;\nconst defaultLanguage = 'en';\n// Redirect language subdomains to main site with language indicator\nfunction middleware(request) {\n    const { pathname, hostname } = request.nextUrl;\n    // Handle www to non-www redirect FIRST to prevent loops\n    if (hostname === 'www.generative-engine.org' || hostname === 'www.lookatmyprofile.org') {\n        const url = request.nextUrl.clone();\n        url.hostname = hostname.replace('www.', '');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url, {\n            status: 301\n        });\n    }\n    // Check if it's a language subdomain\n    const languageSubdomains = [\n        'es',\n        'fr',\n        'de',\n        'pt',\n        'it',\n        'ja',\n        'zh',\n        'ko',\n        'uk'\n    ];\n    const subdomain = hostname.split('.')[0];\n    // If it's a language subdomain, redirect to main site with coming soon page\n    if (languageSubdomains.includes(subdomain)) {\n        const url = new URL(`/coming-soon?lang=${subdomain}`, request.url);\n        url.hostname = 'generative-engine.org';\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n    // Handle platform page redirects\n    if (pathname.startsWith('/platforms/')) {\n        const platformSlug = pathname.replace('/platforms/', '').replace(/\\/$/, '');\n        const correctSlug = (0,_app_lib_platform_redirects__WEBPACK_IMPORTED_MODULE_1__.getCorrectPlatformSlug)(platformSlug);\n        // If we found a redirect mapping and it's different from current\n        if (correctSlug && correctSlug !== platformSlug) {\n            const url = request.nextUrl.clone();\n            url.pathname = `/platforms/${correctSlug}`;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url, {\n                status: 301\n            });\n        }\n    }\n    // Handle content redirects\n    if (CONTENT_REDIRECTS[pathname]) {\n        const url = request.nextUrl.clone();\n        url.pathname = CONTENT_REDIRECTS[pathname];\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url, {\n            status: 301\n        });\n    }\n    // Don't redirect blog posts with timestamps - they are valid slugs\n    // Removed the newsArticlePattern redirect that was breaking blog posts\n    // Continue with the request for the main site\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */ '/((?!api|_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});